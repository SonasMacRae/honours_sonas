import random

# Creates the destinations that the TSP has to visit
def Start(numberOfLocations):
	tempLocations = []
	i = 0
	while i < numberOfLocations:
		tempTuple = (random.randint(0,100), random.randint(0,100))
		if tempTuple not in tempLocations:
			tempLocations.append(tempTuple)
			i += 1
		continue
	return tempLocations

def PreSetProblems(choice):
	if choice == "1":
		return [(565,575),(25,185),(345,750),(945,685),(845,655),(880,660),(25,230),(525,1000),(580,1175),(650,1130),(1605,620),(1220,580),(1465,200),(1530,5),(845,680),(725,370),(145,665),(415,635),(510,875),(560,365),(300,465),(520,585),(480,415),(835,625),(975,580),(1215,245),(1320,315),(1250,400),(660,180),(410,250),(420,555),(575,665),(1150,1160),(700,580),(685,595),(685,610),(770,610),(795,645),(720, 635),(760, 650),(475, 960),(95, 260),(875,920),(700,500),(555,815),(830,485),(1170,65),(830,610),(605, 625),(595,360),(1340,725),(1740,245)]
	if choice == "2":
		return [(37, 52),(49, 49),(52, 64),(20, 26),(40, 30),(21, 47),(17, 63),(31, 62),(52, 33),(51, 21),(42, 41),(31, 32),(5, 25),(12, 42),(36, 16),(52, 41),(27, 23),(17, 33),(13, 13),(57, 58),(62, 42),(42, 57),(16, 57),(8, 52),(7, 38),(27, 68),(30, 48),(43, 67),(58, 48),(58, 27),(37, 69),(38, 46),(46, 10),(61, 33),(62, 63),(63, 69),(32, 22),(45, 35),(59, 15),(5, 6),(10, 17),(21, 10),(5, 64),(30, 15),(39, 10),(32, 39),(25, 32),(25, 55),(48, 28),(56, 37),(30, 40)]
	if choice == "3":
		return [(1380, 939),(2848, 96), (3510, 1671),(457, 334),(3888, 666), (984, 965), (2721, 1482), (1286, 525), (2716, 1432), (738, 1325), (1251, 1832),(2728, 1698),(3815, 169),(3683, 1533),(1247, 1945),(123, 862),(1234, 1946),(252, 1240),(611, 673),(2576, 1676),(928, 1700),(53, 857),(1807, 1711),(274, 1420),(2574, 946),(178, 24),(2678, 1825),(1795, 962),(3384, 1498),(3520, 1079),(1256, 61),(1424, 1728),(3913, 192),(3085, 1528),(2573, 1969),(463, 1670),(3875, 598),(298, 1513),(3479, 821),(2542, 236),(3955, 1743),(1323, 280),(3447, 1830),(2936, 337),(1621, 1830),(3373, 1646),(1393, 1368),(3874, 1318),(938, 955),(3022, 474),(2482, 1183),(3854, 923),(376, 825),(2519, 135),(2945, 1622), (953, 268),(2628, 1479),(2097, 981),(890, 1846),(2139, 1806), (2421, 1007), (2290, 1810), (1115, 1052),(2588, 302),(327, 265),(241, 341),(1917, 687),(2991, 792),(2573, 599),(19, 674),(3911, 1673),(872, 1559),(2863, 558),(929, 1766),(839, 620),(3893, 102),(2178, 1619),(3822, 899),(378, 1048),(1178, 100),(2599, 901),(3416, 143),(2961, 1605),(611, 1384),(3113, 885),(2597, 1830),(2586, 1286),(161, 906), (1429, 134), (742, 1025), (1625, 1651),(1187, 706), (1787, 1009), (22, 987), (3640, 43), (3756, 882), (776, 392), (1724, 1642),(198, 1810), (3950, 1558)]
	if choice == "4":
		return [(6734, 1453),(2233, 10), (5530, 1424),(401, 841),(3082, 1644),(7608, 4458),(7573, 3716),(7265, 1268),(6898, 1885),(1112, 2049),(5468, 2606),(5989, 2873),(4706, 2674),(4612, 2035), (6347, 2683), (6107, 669), (7611, 5184),(7462, 3590),(7732, 4723),(5900, 3561),(4483, 3369),(6101, 1110),(5199, 2182),(1633, 2809),(4307, 2322),(675, 1006),(7555, 4819),(7541, 3981),(3177, 756),(7352, 4506),(7545, 2801),(3245, 3305),(6426, 3173),(4608, 1198),(23, 2216),(7248, 3779),(7762, 4595),(7392, 2244),(3484, 2829),(6271, 2135),(4985, 140),(1916, 1569),(7280, 4899),(7509, 3239),(10, 2676),(6807, 2993),(5185, 3258),(3023, 1942)]
	if choice == "5":
		return [(1150,1760),(630,1660), (40,2090), (750,1100), (750,2030),(1030,2070), (1650,650), (1490,1630), (790,2260), (710,1310), (840,550),(1170,2300),(970,1340),(510,700),(750,900),(1280,1200),(230,590),(460,860),(1040,950),(590,1390),(830,1770),(490,500),(1840,1240),(1260,1500),(1280,790),(490,2130),(1460,1420),(1260,1910),(360,1980)]
	if choice == "6":
		return [(8, 124),(125, 80),(97, 74),(69, 96),(106, 46),(49, 57),(80, 125),(42, 93),(104, 94),(35, 17),(118, 96),(151, 22),(154, 182),(57, 165),(18, 159),(27, 123),(96, 170),(63, 198),(59, 211),(88, 182),(142, 72),(48, 190),(106, 106),(28, 102),(63, 224),(58, 93),(103, 56),(38, 149),(23, 138),(22, 146),(32, 208),(27, 144),(75, 258),(59, 101),(41, 32),(53, 46),(76, 19),(79, 115),(109, 13),(59, 118),(84, 147),(95, 160),(87, 213),(73, 166),(43, 153),(81, 175),(59, 77),(70, 68),(106, 169),(86, 168),(127, 109),(68, 243),(116, 57),(39, 78),(54, 65),(77, 141),(95, 24),(89, 238),(9, 158),(39, 109),(25, 129),(69, 20),(104, 34),(132, 51),(98, 207),(37, 203),(80, 16),(103, 224),(94, 202),(49, 96),(55, 80),(62, 123),(91, 31),(51, 142),(64, 172),(14, 138),(120, 37),(38, 160),(86, 230),(96, 59),(33, 177),(108, 78),(93, 12),(43, 47),(52, 200),(48, 171),(62, 153),(159, 53),(60, 60),(36, 73),(111, 243),(31, 150),(130, 67),(36, 172),(132, 28),(29, 73),(150, 28),(89, 166),(58, 21),(78, 244),(82, 58),(81, 68),(92, 98),(56, 33),(47, 126),(70, 34),(78, 195),(77, 215),(140, 62),(70, 57),(16, 89),(66, 50),(98, 194),(87, 45),(132, 87),(52, 99),(50, 212),(103, 176),(84, 91),(31, 140)]
	if choice == "7":
		return [(3600, 2300),(3100, 3300),(4700, 5750),(5400, 5750),(5608, 7103),(4493, 7102),(3600, 6950),(3100, 7250),(4700, 8450),(5400, 8450),(5610, 10053),(4492, 10052),(3600, 10800),(3100, 10950),(4700, 11650),(5400, 11650),(6650, 10800),(7300, 10950),(7300, 7250),(6650, 6950),(7300, 3300),(6650, 2300),(5400, 1600),(8350, 2300),(7850, 3300),(9450, 5750),(10150, 5750),(10358, 7103),(9243, 7102),(8350, 6950),(7850, 7250),(9450, 8450),(10150, 8450),(10360, 10053),(9242, 10052),(8350, 10800),(7850, 10950),(9450, 11650),(10150, 11650),(11400, 10800),(12050, 10950),(12050, 7250),(11400, 6950),(12050, 3300),(11400, 2300),(10150, 1600),(13100, 2300),(12600, 3300),(14200, 5750),(14900, 5750),(15108, 7103),(13993, 7102),(13100, 6950),(12600, 7250),(14200, 8450),(14900, 8450),(15110, 10053),(13992, 10052),(13100, 10800),(12600, 10950),(14200, 11650),(14900, 11650),(16150, 10800),(16800, 10950),(16800, 7250),(16150, 6950),(16800, 3300),(16150, 2300),(14900, 1600),(19800, 800),(19800, 10000),(19800, 11900),(19800, 12200),(200, 12200),(200, 1100),(200, 800)]
	if choice == "8":
		return [(2995, 264),(202, 233),(981, 848),(1346, 408),(781, 670),(1009, 1001),(2927, 1777),(2982, 949),(555, 1121),(464, 1302),(3452, 637),(571, 1982),(2656, 128),(1623, 1723),(2067, 694),(1725, 927),(3600, 459),(1109, 1196),(366, 339),(778, 1282),(386, 1616),(3918, 1217),(3332, 1049),(2597, 349),(811, 1295),(241, 1069),(2658, 360),(394, 1944),(3786, 1862),(264, 36),(2050, 1833),(3538, 125),(1646, 1817),(2993, 624),(547, 25),(3373, 1902),(460, 267),(3060, 781),(1828, 456),(1021, 962),(2347, 388),(3535, 1112),(1529, 581),(1203, 385),(1787, 1902),(2740, 1101),(555, 1753),(47, 363),(3935, 540),(3062, 329),(387, 199),(2901, 920),(931, 512),(1766, 692),(401, 980),(149, 1629),(2214, 1977),(3805, 1619),(1179, 969),(1017, 333),(2834, 1512),(634, 294),(1819, 814),(1393, 859),(1768, 1578),(3023, 871),(3248, 1906),(1632, 1742),(2223, 990),(3868, 697),(1541, 354),(2374, 1944),(1962, 389),(3007, 1524),(3220, 1945),(2356, 1568),(1604, 706),(2028, 1736),(2581, 121),(2221, 1578),(2944, 632),(1082, 1561),(997, 942),(2334, 523),(1264, 1090),(1699, 1294),(235, 1059),(2592, 248),(3642, 699),(3599, 514),(1766, 678),(240, 619),(1272, 246),(3503, 301),(80, 1533),(1677, 1238),(3766, 154),(3946, 459),(1994, 1852),(278, 165)]
	if choice == "9":
		return [(22, 22),(36, 26),(21, 45),(45, 35),(55, 20),(33, 34),(50, 50),(55, 45),(26, 59),(40, 66),(55, 65),(35, 51),(62, 35),(62, 57),(62, 24),(21, 36),(33, 44),(9, 56),(62, 48),(66, 14),(44, 13),(26, 13),(11, 28),(7, 43),(17, 64),(41, 46),(55, 34),(35, 16),(52, 26),(43, 26),(31, 76),(22, 53),(26, 29),(50, 40),(55, 50),(54, 10),(60, 15),(47, 66),(30, 60),(30, 50),(12, 17),(15, 14),(16, 19),(21, 48),(50, 30),(51, 42),(50, 15),(48, 21),(12, 38),(15, 56),(29, 39),(54, 38),(55, 57),(67, 41),(10, 70),(6, 25),(65, 27),(40, 60),(70, 64),(64, 4),(36, 6),(30, 20),(20, 30),(15, 5),(50, 70),(57, 72),(45, 42),(38, 33),(50, 4),(66, 8),(59, 5),(35, 60),(27, 24),(40, 20),(40,37),(40, 40)]
	if choice == "10":
		return [(64, 96),(80, 39),(69, 23),(72, 42),(48, 67),(58, 43),(81, 34),(79, 17),(30, 23),(42, 67),(7, 76),(29, 51),(78, 92),(64, 8),(95, 57),(57, 91),(40, 35),(68, 40),(92, 34),(62, 1),(28, 43),(76, 73),(67, 88),(93, 54),(6, 8),(87, 18),(30, 9),(77, 13),(78, 94),(55, 3),(82, 88),(73, 28),(20, 55),(27, 43),(95, 86),(67, 99),(48, 83),(75, 81),(8, 19),(20, 18),(54, 38),(63, 36),(44, 33),(52, 18),(12, 13),(25, 5),(58, 85),(5, 67),(90, 9),(41, 76),(25, 76),(37, 64),(56, 63),(10, 55),(98, 7),(16, 74),(89, 60),(48, 82),(81, 76),(29, 60),(17, 22),(5, 45),(79, 70),(9, 100),(17, 82),(74, 67),(10, 68),(48, 19),(83, 86),(84, 94)]
